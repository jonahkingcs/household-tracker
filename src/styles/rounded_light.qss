/*
  Light rounded theme for Household Tracker.

  Inspired by macOS/iOS modern light mode design:
  - Bright neutral backgrounds (#f5f6f7 base, subtle darker panels)
  - Rounded corners on tabs, cards, buttons, and inputs
  - Subtle hover/pressed states for buttons
  - Minimal scrollbar styling

  Apply via: app.setStyleSheet(open("rounded_light.qss").read())
*/

/* Base */
* {
  font-family: Menlo, monospace;
}
QWidget {
  background-color: #ffffff;
  color: #1a1a1a;
}

/* Tabs */
QTabBar::tab {
  background: #ffffff;
  border: 1px solid #d0d0d0;
  padding: 8px 16px;
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
  margin-right: 4px;
}
QTabBar::tab:selected {
  background: #f5dcf4;
  border: 1px solid #107865;
}

/* Cards */
.QCard {
  background: #ffffff;
  border: 1px solid #0e9c82;
  border-radius: 14px;
  padding: 12px;
}

/* Buttons to match tab look & feel */
QPushButton {
  background: #ffffff;                /* like normal tab */
  border: 1px solid #d0d0d0;          /* like normal tab border */
  border-radius: 10px;
  padding: 8px 20px;
  color: #1a1a1a;
}



QPushButton:pressed {
  background: #107865;                /* solid accent when pressed */
  color: #ffffff;                     /* readable text on dark */
  border: 1px solid #107865;
}

QPushButton:default {
  /* default action button subtle accent ring */
  border: 1px solid #107865;
}

QPushButton:disabled {
  background: #f0f0f0;
  color: #9a9a9a;
  border: 1px solid #e0e0e0;
}

/* Inputs */
QLineEdit, QSpinBox, QDoubleSpinBox, QComboBox, QTextEdit {
  background: #ffffff;
  border: 1px solid #cccccc;
  border-radius: 10px;
  padding: 6px 8px;
}

/* Flat arrow on combo boxes (no boxed button) */
QComboBox { padding-right: 28px; }

QComboBox::drop-down {
  background: transparent;
  border: none;
  width: 20px;
  subcontrol-origin: padding;
  subcontrol-position: center right;
  margin-right: 6px;
}

QComboBox::down-arrow {
  width: 12px; height: 12px;
  image: url(:/icons/arrow_down.png);
}

/* ---- SpinBox: flat arrow buttons (no boxed look) ---- */
QAbstractSpinBox { padding-right: 28px; }   /* leave room for arrows */

QSpinBox::up-button,
QSpinBox::down-button {
  background: transparent;    /* remove the rectangle */
  border: none;
  width: 18px;                 /* click area width */
  height: 14px;                /* click area height */
  padding: 0;
  margin: 0;
  /* position the buttons at the right edge, top/bottom */
  subcontrol-origin: padding;
}

QSpinBox::up-button   { subcontrol-position: top right;    margin-right: 6px; margin-top: 2px; }
QSpinBox::down-button { subcontrol-position: bottom right; margin-right: 6px; margin-bottom: 2px; }

/* keep them flat on hover/press/focus */
QSpinBox::up-button:hover,
QSpinBox::down-button:hover,
QSpinBox::up-button:pressed,
QSpinBox::down-button:pressed,
QSpinBox::up-button:off,
QSpinBox::down-button:off {
  background: transparent;
  border: none;
}

/* your custom arrow PNGs */
QSpinBox::down-arrow {
  width: 12px; height: 12px;
  image: url(:/icons/arrow_down_spn);
}
QSpinBox::up-arrow {
  width: 12px; height: 12px;
  image: url(:/icons/arrow_up_spn);
}

/* hide arrows when disabled */
QSpinBox::up-arrow:disabled, QSpinBox::down-arrow:disabled { image: none; }

/* ------- Scrollbars ------- */
QScrollBar:vertical {
  background: transparent;
  width: 10px;
  margin: 2px;
}

QScrollBar::handle:vertical {
  background: #c8c8c8;
  border-radius: 6px;
  min-height: 20px;
}

/* Horizontal scrollbar */
QScrollBar:horizontal {
  background: transparent;
  height: 10px;
  margin: 2px;
}

QScrollBar::handle:horizontal {
  background: #c8c8c8;
  border-radius: 6px;
  min-width: 20px;
}

/* Table: body only (header owns the top), no right border under scrollbar */
QTableView {
  background: #f3faf8;
  border: none;
  gridline-color: #e5e7eb;
  alternate-background-color: #e6f5f0;
}

/* Force selected text to stay readable on green */
QTableView::item:selected {
  background: #e1e1e1;
  color: #1a1a1a;
}

/* Cell padding */
QTableView::item {
  padding: 8px 10px;
}

/* Header */
QHeaderView::section {
  background-color: #107865;
  color: #ffffff;
  padding: 8px 10px;
  border: none;
  border-right: 1px solid #0d6b57;
  border-bottom: 1px solid #d0d0d0;   /* seam that meets the viewport border */
}
QHeaderView::section:first { border-top-left-radius: 8px; }
QHeaderView::section:last  { border-top-right-radius: 8px; }

/* Top-left header corner tile */
QTableCornerButton::section {
  background-color: #107865;
  border: none;
  border-right: 1px solid #0d6b57;
  border-bottom: 1px solid #d0d0d0;   /* same seam as header sections */
}

/* Bottom-right corner where scrollbars meet: continue the bottom border only */
QAbstractScrollArea::corner {
  background: #ffffff;
  border: none;
  border-top: 1px solid #d0d0d0;      /* extend the bottom line under the corner */
}

/* Hide scrollbar arrows, keep modern handles */
QScrollBar::add-line:vertical,
QScrollBar::sub-line:vertical,
QScrollBar::add-line:horizontal,
QScrollBar::sub-line:horizontal { height: 0; width: 0; background: none; border: none; }

QScrollBar::handle:vertical,
QScrollBar::handle:horizontal { background: #c8c8c8; border-radius: 6px; }

/* Remove the dotted focus rect on items for a cleaner look */
QTableView::item:focus {
  outline: none;
}

/* ==== Chore cards with pixel 9-slice ==== */
QWidget#ChoreCard {
  /* reserve space for the 10px slices */
  border: 10px solid transparent;

  /* paint the nine-slice; slices = top right bottom left */
  border-image: url(:/ui/pixel_card_normal.png) 20 20 20 20 repeat;

  /* the center is painted by border-image; keep bg transparent */
  background: transparent;

  /* inner spacing for content (added inside the border) */
  padding: 12px;
}


/* Slightly softer text for the description line */
QLabel[choreDesc="true"] {
  color: #6f6f6f;
  font-size: 12px;
}

/* Slightly softer text for the meta line */
QLabel[choreMeta="true"] {
  color: #6b6b6b;
  font-size: 12px;
  margin: 0;
  padding: 0;
}

QWidget#ChoreCard QPushButton:hover {
  border-image: url(:/ui/pixel_button_hover.png) 20 20 20 20 repeat;
}

QWidget#ChoreCard QPushButton:pressed {
  border-image: url(:/ui/pixel_button_pressed.png) 20 20 20 20 repeat;
}

/* Buttons inside ChoreCard: force pixel 9-slice */
QWidget#ChoreCard QPushButton {
  /* MUST set border width for border-image to render */
  border: 10px solid transparent;

  /* your @2x PNG that worked before */
  border-image: url(:/ui/pixel_button_normal.png) 20 20 20 20 repeat;

  /* override globals that can interfere */
  border-radius: 0;
  background: transparent;

  color: #1a1a1a;
  padding: 6px 12px;
}